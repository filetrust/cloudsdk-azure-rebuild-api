name: Deploy Node Rebuild

on:
  push:
    branches: [master]

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.TOKEN_GITHUB }}
    - name: Build
      run: |
        npm install
        npm run build
      working-directory: flavours/nodejs/functionapp
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
    - name: Serverless Package üöÄ
      uses: aaronpanch/action-serverless@v1.0.0
      with:
        args: package
      env: 
        SERVICE_ROOT: flavours/nodejs/functionapp
    - name: Upload package üì¶
      uses: actions/upload-artifact@v1
      with:
        name: RebuildNodeJs
        path: flavours/nodejs/functionapp/.serverless
      
  deploy-to-stage:
    runs-on: ubuntu-latest
    needs: [package]
    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2
      with:
        submodules: true
        token: ${{ secrets.TOKEN_GITHUB }}
    - name: Download package üì¶
      uses: actions/download-artifact@v1
      with:
        path: flavours/nodejs/functionapp/.serverless
        name: RebuildNodeJs
    - name: Install npm packages
      run: npm install
      working-directory: flavours/nodejs/functionapp
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
    - name: Deploy Package üöÄ
      uses: aaronpanch/action-serverless@v1.0.0
      with:
        args: deploy -p ".serverless/rebuild-node.zip" --stage STAGE --region UK-South --resourceGroup gw-uks-win-rebuild-stage --subscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      env: 
        SERVICE_ROOT: flavours/nodejs/functionapp
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        
  end-to-end-test:
    runs-on: ubuntu-latest
    needs: [deploy-to-stage]
    steps:
      - name: Set up Python 3.7 üêç
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies üîß
        run: |
          python -m pip install --upgrade pip
          pip install glasswall-aws-product-test-automation
      - name: Run Tests üß™
        run: echo Tests placeholder
        #run: s93_test_automation --product "rebuild" --endpoint "${{ secrets.STAGE_API_ENDPOINT }}" --api_key "${{ secrets.STAGE_API_KEY }}" 
   
  #deploy-to-prod-1:
  #  runs-on: ubuntu-latest
  #  needs: [package]
  #  steps:
  #  - name: Checkout üõéÔ∏è
  #    uses: actions/checkout@v2
  #    with:
  #      submodules: true
  #      token: ${{ secrets.TOKEN_GITHUB }}
  #  - name: Download package üì¶
  #    uses: actions/download-artifact@v1
  #    with:
  #      path: flavours/nodejs/functionapp/.serverless
  #      name: RebuildNodeJs
  #  - name: Install npm packages
  #    run: npm install
  #    working-directory: flavours/nodejs/functionapp
  #    env:
  #      GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
  #  - name: Deploy Package üöÄ
  #    uses: aaronpanch/action-serverless@v1.0.0
  #    with:
  #      args: deploy -p ".serverless/rebuild-node.zip" --stage PROD --region UK-South --resourceGroup Rebuild-Node-Win-Stage --subscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  #    env: 
  #      SERVICE_ROOT: flavours/nodejs/functionapp
  #      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_PROD1_SUBSCRIPTION_ID }}
  #      AZURE_TENANT_ID: ${{ secrets.AZURE_PROD1_TENANT_ID }}
  #      AZURE_CLIENT_ID: ${{ secrets.AZURE_PROD1_CLIENT_ID }}
  #      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_PROD1_CLIENT_SECRET }}
       
